import { resolve } from 'node:path';
import FastaPoint from "../../lib/FastaPoint";
const PERCENTAGE = 0.95
const test_data =
`>A/turkey/Missouri/16-014037-7/2016
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKRIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTSTVHYPKVYKTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQDCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGEVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGLRMVDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKREEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCVIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILPDMTPSIEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARGQYSGFVRTLFQQMRDVLGTFNTVQIIKLLPFAAAPPEQSRMQFSSLTVNVRGSGMRILVRGNSPVFNYNKATKRLTVLGKDAGALLEDPDEGTAGVESAVLRGFLILGKEDKRYGPALSINELSNLAKGEKANVLIGQGDVVLVMKRKRDSSILTDSQTATKRIRMAIN
>A/ruddy turnstone/Delaware Bay/317/2016
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKRIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTSTVHYPKVYKTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQDCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGEVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGIRMIDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKKEEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCMIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILPDMTPSTEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARGQYSGFVRTLFQQMRDVLGTFDTVQIIKLLPFAAAPPEQSRMQFSSLTVNVRGSGMRILVRGNSPVFNYNKATKRLTVLGKDAGALTEDPDEGTAGVESAVLRGFLILGKEDKRYGPALSINELSNLAKGEKANVLIGQGDVVLVMKRKRDSSILTDSQTATKRIRMAIN
>A/Green-winged teal/Mexico/PB2 UIFMVZ80/2016
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKKIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTNTVHYPKVYRTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQYCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGGVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGIKMVDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKKEEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCMIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILSDMTPSTEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARSQYSGFVRTLFQQMRDVLGTFDTVQIIKLLPFASAPPEQSRMQFSSLTVNVRGSGMRILVRGNSPVFNYNKATKRLTVLGK-----------------------------------------------------------------------------------------
>A/Green-winged teal/Mexico/PB2 UIFMVZ80/2016 DUPLICATE
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKKIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTNTVHYPKVYRTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQYCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGGVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGIKMVDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKKEEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCMIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILSDMTPSTEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARSQYSGFVRTLFQQMRDVLGTFDTVQIIKLLPFASAPPEQSRMQFSSLTVNVRGSGMRILVRGNSPVFNYNKATKRLTVLGK-----------------------------------------------------------------------------------------
>A/Green-winged teal/Mexico/PB2 UIFMVZ80/2016 95 SIMILAR
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKKIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTNTVHYPKVYRTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQYCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGGVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGIKMVDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKKEEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCMIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILSDMTPSTEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARSQYSGFVRTLFQQMRDVLGTFDTVQIIKLLPFASAPPEQSRMQFSSLTVMER--------------------------------------------------------------------IKELRDL------------------MSQSRTREILTKTTVDHMAIIKK--
>A/Green-winged teal/Mexico/PB2 UIFMVZ80/2016 99 SIMILAR
MERIKELRDLMSQSRTREILTKTTVDHMAIIKKYTSGRQEKNPALRMKWMMAMKYPITADKKIMEMIPERNEQGQTLWSKTNDAGSDRVMVSPLAVTWWNRNGPTTNTVHYPKVYRTYFEKVERLKHGTFGPVHFRNQVKIRRRVDINPGHADLSAKEAQDVIMEVVFPNEVGARILTSESQLTITKEKKEELQYCKIAPLMVAYMLERELVRKTRFLPVAGGTSSVYIEVLHLTQGTCWEQMYTPGGGVRNDDVDQSLIIAARNIVRRATVSADPLASLLEMCHSTQIGGIKMVDILRQNPTEEQAVDICKAAMGLRISSSFSFGGFTFKRTSGSSVKKEEEVLTGNLQTLKIRVHEGYEEFTMVGRRATAILRKATRRLIQLIVSGRDEQSIAEAIIVAMVFSQEDCMIKAVRGDLNFVNRANQRLNPMHQLLRHFQKDAKVLFQNWGIEPIDNVMGMIGILSDMTPSTEMSLRGIRVSKMGVDEYSSTERVVVSIDRFLRVRDQRGNVLLSPEEVSETQGTEKLTITYSSSMMWEINGPESVLVNTYQWIIRNWETVKIQWSQDPTMLYNKMEFEPFQSLVPKAARSQYSGFVRTLFQQMRDVLGTFDTVQIIKLLPFASAPPEQSRMQFSSLTVNVRGSGMRILVRGNSPVFNYNKATKRMERIKE-----------------------------------------------------------------------------------------
`


export async function getDataFromFile(path: string){
    const p = resolve(__dirname,"test_data",path)
    console.log(p)
    const files = Bun.file(p);
    const data = await files.text();
    //split fasta on >
    const initial_split = data.split('>');
    const fasta_points = [];
    for(let i=0;i<initial_split.length;i++){
        const val = initial_split[i].indexOf('\n')
        if(val !== -1){
            const fp = new FastaPoint(initial_split[i].substring(0,val),initial_split[i].substring(val+1));
            fasta_points.push(fp);
        }
    }
    return fasta_points;
}

export async function writeDataToFile(data: string, path: string = `./output-${new Date().getTime()}.fasta`){
    await Bun.write(resolve(__dirname)+"/"+path, data);
} 

export async function SequenceFilter(fileName:string = './test_data/test_data_align.fas'){
    const start_time = performance.now();
    // console.log("\n\n\nSTART");
    const fasta_points = await getDataFromFile(fileName);
    let filtered_data = [...fasta_points]
    for(let i=0;i<filtered_data.length;i++){
        let test_point = filtered_data[i];
        // console.log("\n\nTESTING:", test_point.header);
        for(let j=0;j<filtered_data.length;j++){
            if(i === j){
                continue
            }
            let compare_point = filtered_data[j];
            // console.log("-------------------------\nCOMPARING:\t", compare_point.header);
            let score = get_similarity_score(test_point.sequence,compare_point.sequence)
            let th = Math.round(test_point.sequence.length * PERCENTAGE)
            // console.log("SCORE:", score, "/", th);
            if(score >= th){
                const temp = filtered_data.splice(j,1);
                // console.log("REMOVING:", temp[0].header);
                j--;
            }
        }
    }
    // console.log("\n\n\nEND");
    let output = "";
    for(let i=0;i<filtered_data.length;i++){
        output += filtered_data[i].toString() + "\n";
    }
    await writeDataToFile(output, `./sequence_filter_output-${new Date().getTime()}.fasta`);
    const end_time = performance.now();
    console.log("SequenceFilter Time taken:", end_time - start_time, "ms");
}
export async function SequenceFilter1(fileName:string = './test_data/test_data_align.fas'){
    const start_time = performance.now();
    console.log("\n\n\nSTART");
    const fasta_points = await getDataFromFile(fileName);
    let filtered_data = [...fasta_points].slice(0,5);
    console.log(filtered_data.length);
    function test(arr:FastaPoint[], index=0){
        if(index === arr.length){
            return arr
        }
        console.log("PIVOT:\t", arr[index].header);
        const pivot = arr[index];
        for(let i=index+1;i<arr.length;i++){
            console.log("COMPARING TO:\t", arr[i].header);
            const sim = get_similarity_score(pivot.sequence,arr[i].sequence);
            const th = Math.round(pivot.sequence.length * PERCENTAGE);
            console.log("SCORE:\t", sim, "/", th);
            if(sim >= th){
                console.log("REMOVING:", arr[i].header);
                arr.splice(i,1);
            }
        }
        test(arr, index+1);
    }
    return;
    const output_arr:FastaPoint[] = test(filtered_data) || [];
    console.log(output_arr);
    console.log("\n\n\nEND");
    let output = output_arr.map(x => x.toString()).join("\n");
    for(let i=0;i<filtered_data.length;i++){
        output += filtered_data[i].toString() + "\n";
    }
    await writeDataToFile(output, `./sequence_filter_1_output-${new Date().getTime()}.fasta`);
    const end_time = performance.now();
    console.log("SequenceFilter1Time taken:", end_time - start_time, "ms");
}


function get_similarity_score(seq1: string, seq2: string){
    let score = 0;
    for(let i=0;i<seq1.length;i++){
        if(seq1[i] === seq2[i]){
            score++;
        }
    }
    return score
}